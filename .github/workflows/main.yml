name: test onion work
on:
  issue_comment:
    types: [created]
jobs:
 StartWorks:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.list_dirs.outputs.matrix}}
    steps:  
    - uses: actions/checkout@v2
      with:
       ref: dev
       path: dev
    - id: list_dirs
      run: echo "::set-output name=matrix::$(ls dev/myLinuxWorkers/*.py|jq -cnR '[inputs | select(length>0)]')"
 StartWorksWin:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{steps.list_dirs.outputs.matrix}}
    steps:  
    - uses: actions/checkout@v2
      with:
       ref: dev
       path: dev
    - id: list_dirs
      run: echo "::set-output name=matrix::$(ls dev/myWinWorkers/*.py|jq -cnR '[inputs | select(length>0)]')"      

 ManyWorks:
    runs-on: ubuntu-latest
    needs: StartWorks
    strategy:
      fail-fast: false
      matrix:
        job: ${{fromJson(needs.StartWorks.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
       ref: dev
       path: dev
    - name: start $JOB
      run: |
          sudo python3 $JOB
      env:
        JOB: ${{ matrix.job }}
 ManyWorksWin:
    runs-on: windows-latest
    needs: StartWorksWin
    strategy:
      fail-fast: false
      matrix:
        job: ${{fromJson(needs.StartWorksWin.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
      with:
       ref: dev
       path: dev
    - name: start ${{ matrix.job }}
      run: python ${{ matrix.job }}
